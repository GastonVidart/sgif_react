[{"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\index.js":"1","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Footer.js":"2","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Menu.js":"3","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\App.js":"4","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Header.js":"5","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\reportWebVitals.js":"6","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Sacramento.js":"7","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioAlumno.js":"8","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioResponsable.js":"9","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Home.js":"10","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\InscribirAlumno.js":"11","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\CompletarFamilia.js":"12","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\NotasTrimestrales.js":"13","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AltaCurso.js":"14","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Alerts.js":"15","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormDialogAltaCurso.js":"16","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\TableDictados.js":"17","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\utils\\Errores.js":"18","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioPadre.js":"19","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioHermano.js":"20","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\ModalFormNuevo.js":"21","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaCompletarFamilia.js":"22","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaInscribirAlumno.js":"23","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Notificacion.js":"24"},{"size":613,"mtime":1612378756819,"results":"25","hashOfConfig":"26"},{"size":260,"mtime":1611178187818,"results":"27","hashOfConfig":"26"},{"size":4140,"mtime":1612213887137,"results":"28","hashOfConfig":"26"},{"size":4871,"mtime":1612378756806,"results":"29","hashOfConfig":"26"},{"size":2239,"mtime":1611178187868,"results":"30","hashOfConfig":"26"},{"size":375,"mtime":1606479163151,"results":"31","hashOfConfig":"26"},{"size":3762,"mtime":1613277551269,"results":"32","hashOfConfig":"26"},{"size":25794,"mtime":1613267583293,"results":"33","hashOfConfig":"26"},{"size":28190,"mtime":1612378756811,"results":"34","hashOfConfig":"26"},{"size":713,"mtime":1611178187868,"results":"35","hashOfConfig":"26"},{"size":54345,"mtime":1613350215887,"results":"36","hashOfConfig":"26"},{"size":31063,"mtime":1612840432256,"results":"37","hashOfConfig":"26"},{"size":635,"mtime":1611178187878,"results":"38","hashOfConfig":"26"},{"size":7947,"mtime":1611178187818,"results":"39","hashOfConfig":"26"},{"size":1466,"mtime":1611948692632,"results":"40","hashOfConfig":"26"},{"size":11116,"mtime":1611178187838,"results":"41","hashOfConfig":"26"},{"size":3950,"mtime":1611178187902,"results":"42","hashOfConfig":"26"},{"size":1863,"mtime":1612213887163,"results":"43","hashOfConfig":"26"},{"size":47314,"mtime":1613250600420,"results":"44","hashOfConfig":"26"},{"size":30343,"mtime":1613250600420,"results":"45","hashOfConfig":"26"},{"size":3114,"mtime":1612213887160,"results":"46","hashOfConfig":"26"},{"size":2472,"mtime":1612378756807,"results":"47","hashOfConfig":"26"},{"size":2673,"mtime":1613345623006,"results":"48","hashOfConfig":"26"},{"size":1679,"mtime":1613322016253,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"va329a",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\index.js",[],["116","117"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Footer.js",["118"],"import React, { Component } from \"react\";\r\n\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n           <footer>Pie de Pagina</footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;",["119","120"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Menu.js",["121"],"import React from \"react\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport '../css/navbar.css';\r\n\r\nclass Menu extends React.Component {\r\n    getNavLinkClass = (path) => {\r\n        return this.props.location.pathname === path ? 'active' : '';\r\n    }\r\n\r\n    render() {\r\n        {/*TODO: ver largo final pagina */}\r\n        return (\r\n            < nav className=\"col-md-auto shadow\" role=\"navigation\" >\r\n                <ul>\r\n\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"col-auto texto_nav\" href=\"/\">Inicio</a>\r\n                    </li>\r\n\r\n                    {/* que a englobe todo, ver estilos */}\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/inscribir-alumno\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"col-auto texto_nav\" href=\"/inscribir-alumno\">Inscribir Alumno</a>\r\n                    </li>\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/completar-familia\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"col-auto texto_nav\" href=\"/completar-familia\">Completar Familia</a>\r\n                    </li>\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/alta-curso\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"texto_nav\" href=\"/alta-curso\">Registrar Curso</a>\r\n                    </li>\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/notas-trimestrales\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"texto_nav\" href=\"/notas-trimestrales\">Registrar Notas Trimestrales</a>\r\n                    </li>\r\n                </ul>\r\n                \r\n                <ul className=\"collapse\">\r\n                    <li className={this.getNavLinkClass(\"/\")}>\r\n                        <NavLink to=\"/\" >Inicio</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/inscribir-alumno\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/completar-familia\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/notas-trimestrales\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/alta-curso\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                </ul>\r\n\r\n            </nav >\r\n        )\r\n    }\r\n}\r\n\r\nMenu = withRouter(Menu);\r\nexport default Menu;\r\n","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\App.js",["122"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport Menu from './components/Menu';\r\nimport Header from './components/Header';\r\n\r\nimport Home from './components/Home';\r\nimport InscribirAlumno from './components/InscribirAlumno';\r\nimport CompletarFamilia from './components/CompletarFamilia';\r\nimport NotasTrimestrales from './components/NotasTrimestrales';\r\nimport AltaCurso from './components/AltaCurso';\r\nimport Notificacion from './components/Notificacion'\r\n\r\nimport Footer from './components/Footer';\r\n\r\nimport './css/main.css'\r\n\r\nconst Route = require('react-router-dom').Route;\r\n\r\nclass App extends Component {\r\n\r\n    //TODO: para implementar la cancelacion en el componentDidUnmount ejecutar los fetch que eliminen los datos registrados\r\n    //TODO: si ocurre un error en completar familia no se caputra pq no es atomica. arreglar en base\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            alumnoReinscribir: {},\r\n            esReinscripcion: false,\r\n            notificaciones: new Set()\r\n        }\r\n\r\n        this.cambioCompletarFam = this.cambioCompletarFam.bind(this);\r\n        this.cambioInscribir = this.cambioInscribir.bind(this);\r\n        this.addNotificacion = this.addNotificacion.bind(this);\r\n        this.delNotificacion = this.delNotificacion.bind(this);\r\n    }\r\n\r\n    cambioCompletarFam(alumno) {\r\n        console.log(\"Guardando estado Inscripción: \", alumno)\r\n        this.setState({\r\n            alumnoReinscribir: alumno,\r\n            esReinscripcion: true\r\n        })\r\n        console.log(\"Redirección a Completar Familia\");\r\n        this.props.history.push(\"/completar-familia\");\r\n    }\r\n\r\n    cambioInscribir() {\r\n        console.log(\"Redirección a Inscribir Alumno\");\r\n        this.props.history.push(\"/inscribir-alumno\");\r\n    }\r\n\r\n    addNotificacion(tipo, mensaje) {\r\n        //console.log(`Cargando Notificación...`);\r\n        //TODO: cuando se llega a 5 notif se tiene que remover\r\n        this.setState(state => {\r\n            const idNotificacion = state.notificaciones.size;\r\n            /*if (idNotificacion >= 5) {\r\n                this.delNotificacion(0);\r\n            }*/\r\n            /*const notificacionesAux = state.notificaciones.add(\r\n                <Notificacion key={idNotificacion} delNotificacion={this.delNotificacion} />);*/\r\n            return {\r\n                notificaciones: new Set(\r\n                    state.notificaciones.add(\r\n                        <Notificacion key={idNotificacion} id={idNotificacion} delNotificacion={this.delNotificacion} tipo={tipo} mensaje={mensaje} />\r\n                    )\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    delNotificacion(index) {\r\n        //console.log(`Eliminando Notificación ${index}...`);\r\n        this.setState(state => {\r\n            [...state.notificaciones].splice(index, 1);\r\n            return {\r\n                notificaciones: new Set(state.notificaciones)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { alumnoReinscribir, esReinscripcion, notificaciones } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"row no-gutters contPpal\">\r\n                    <Menu />\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    {/*component={InscribirAlumno} */}\r\n                    <Route exact path=\"/inscribir-alumno\"\r\n                        render={(props) =>\r\n                            <InscribirAlumno {...props}\r\n                                alumno={alumnoReinscribir}\r\n                                esReinscripcion={esReinscripcion}\r\n                                completarFam={this.cambioCompletarFam}\r\n                                addNotificacion={this.addNotificacion}\r\n                            />} />\r\n                    <Route exact path=\"/completar-familia\"\r\n                        render={(props) =>\r\n                            <CompletarFamilia {...props}\r\n                                alumno={alumnoReinscribir}\r\n                                esReinscripcion={esReinscripcion}\r\n                                inscripcion={this.cambioInscribir}\r\n                                addNotificacion={this.addNotificacion}\r\n                            />} />\r\n                    <Route exact path=\"/notas-trimestrales\" component={NotasTrimestrales} />\r\n                    <Route exact path=\"/alta-curso\" component={AltaCurso} />\r\n                </div>\r\n                {/*puede ser aria-atomic para que lea todo atomicamente */}\r\n                <div aria-live=\"polite\" aria-atomic=\"true\" className=\"cont-notificacion\" >\r\n                    {notificaciones}\r\n                </div>\r\n                {/*<Footer />*/}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(App);",["123","124"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Header.js",[],["125","126"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\reportWebVitals.js",[],["127","128"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Sacramento.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioAlumno.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioResponsable.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Home.js",[],["129","130"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\InscribirAlumno.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\CompletarFamilia.js",["131"],"import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport * as Icon from 'react-feather';\r\nimport AlertaCompletarFamilia from \"./AlertaCompletarFamilia\";\r\nimport { Col, Nav, Row, Tab, TabContainer } from \"react-bootstrap\";\r\nimport ModalFormNuevo from \"./ModalFormNuevo\";\r\nimport { NoExistePersona, BadRequest } from \"../utils/Errores\";\r\nimport { Tipo } from \"./Notificacion\";\r\n\r\nconst urlBase = 'http://localhost:5000/completar-familia';\r\n\r\nclass CompletarFamilia extends React.Component {\r\n\r\n    //TODO: agregar boton cerrar a las tabs\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Extrae de los props los datos necesarios para hacer reinscripcion\r\n        const { alumno, esReinscripcion } = this.props;\r\n\r\n        this.state = {\r\n            alertaRegistro: {\r\n                title: 'Desea finalizar el registro?',\r\n                texto: 'Si finaliza el registro se guardarán los cambios realizados hasta el momento.'\r\n            },\r\n            modalFormNuevo: {\r\n                title: 'Nuevo Familiar',\r\n                texto: 'Si finaliza el registro se guardarán los cambios realizados hasta el momento.',\r\n                tipos: ['Padre', 'Hermano']\r\n            },\r\n            //TODO: refactor dni\r\n            datosAlumno: {\r\n                dni: {\r\n                    valor: esReinscripcion ? alumno.dni : '',\r\n                    valido: false,\r\n                    msjError: \"Ingrese un DNI\",\r\n                    habilitado: !esReinscripcion\r\n                },\r\n                tipoDni: {\r\n                    valor: esReinscripcion ? alumno.dni : 'DNI',\r\n                    msjError: \"Seleccione un Tipo de DNI\",\r\n                    habilitado: !esReinscripcion\r\n                },\r\n                nombre: {\r\n                    valor: '',\r\n                },\r\n                apellido: {\r\n                    valor: '',\r\n                },\r\n                legajo: {\r\n                    valor: '',\r\n                },\r\n                foto: {\r\n                    valor: null,\r\n                    nombreFoto: 'Subir Foto Alumno'\r\n                },\r\n            },\r\n            oidAlumno: esReinscripcion ? alumno.oidAlumno : '',\r\n            spinnerAlumno: false,\r\n            cantPasos: 0,\r\n            pasoActual: 0,\r\n            formularios: [],\r\n            tabs: [],\r\n            validar: false,\r\n        }\r\n        this.formulariosRef = [];\r\n        //this.formulariosBase = [];\r\n\r\n        this.handleChangeAlumno = this.handleChangeAlumno.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.registrar = this.registrar.bind(this);\r\n        this.addFormulario = this.addFormulario.bind(this);\r\n    }\r\n\r\n    //TODO: cuando se cree por boton, hay que poner los props que van a inicializar al formulario, solo se mandarian valores\r\n    addFormulario = async tipo => {\r\n        console.log(`Cargando Formulario ${tipo}...`);\r\n        const exito = await import(`./Formularios/Formulario${tipo}.js`)\r\n            .then(Component => {\r\n                this.setState(state => {\r\n                    const idFormulario = state.formularios.length;\r\n                    return {\r\n                        formularios: state.formularios.concat(\r\n                            <Tab.Pane key={shortid.generate()} eventKey={idFormulario}>\r\n                                <Component.default urlBase={urlBase}\r\n                                    ref={(formulario) => { this.formulariosRef.push(formulario) }}\r\n                                    addNotificacion={this.props.addNotificacion} />\r\n                            </Tab.Pane>),\r\n                        tabs: state.tabs.concat(\r\n                            <Nav.Item key={shortid.generate()}>\r\n                                <Nav.Link eventKey={idFormulario}>{tipo}</Nav.Link>\r\n                            </Nav.Item>\r\n                        ),\r\n                        cantPasos: state.cantPasos + 1\r\n                    }\r\n                })\r\n                return true;\r\n            })\r\n            .catch(error => {\r\n                console.log(`Formulario${tipo} Inválido.`)\r\n                return false;\r\n            })\r\n        return exito;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //TODO: ver si es necesario sino sacar\r\n        /*const formularios = this.formulariosBase;\r\n        formularios.map(async tipo => await this.addFormulario(tipo))*/\r\n\r\n        const { esReinscripcion } = this.props;\r\n        //Se cargan los datos del alumno que se esta reinscribiendo        \r\n        if (esReinscripcion) {\r\n            this.searchReinscripto();\r\n        }\r\n    }\r\n\r\n    handleChangeAlumno(event) {\r\n        let valido, valorAux, nombreFoto, input;\r\n        let inputAux = {};\r\n        const target = event.target;\r\n        const { id, value, type } = target;\r\n\r\n        console.log(\"Alumno id target\", id);\r\n\r\n        valido = this.validarCampo(target);\r\n\r\n        //Cambio de estado diferente\r\n        if (id === \"foto\") {\r\n            const archivo = target.files[0];\r\n            if (archivo !== undefined) {\r\n                valorAux = URL.createObjectURL(archivo);\r\n                nombreFoto = archivo.name;\r\n                inputAux = {\r\n                    nombreFoto\r\n                }\r\n            } else {\r\n                return;\r\n            }\r\n        } else {\r\n            valorAux = type === 'checkbox' ? target.checked : value;\r\n        }\r\n\r\n        this.setState(state => {\r\n            input = {\r\n                ...state.datosAlumno[id],\r\n                valor: valorAux,\r\n                valido\r\n            }\r\n            Object.assign(input, inputAux);\r\n            return {\r\n                datosAlumno: {\r\n                    ...state.datosAlumno,\r\n                    [id]: input\r\n                }\r\n            }\r\n        });\r\n        return;\r\n    }\r\n\r\n    validarCampo(target) {\r\n        const { id } = target;\r\n        let validoAux = true;\r\n        let validoHTML = target.checkValidity();\r\n\r\n        if (validoHTML) {\r\n            //Validación específica por campo\r\n            //En cada case se debería cambiar el valor de validoAux, para condiciones adicionales\r\n            switch (id) {\r\n                /*case \"dni\":\r\n                    //console.log(\"dni\");\r\n                    break;*/\r\n                default:\r\n                    //console.log(\"default\");\r\n                    break;\r\n            }\r\n        }\r\n        return validoAux && validoHTML;\r\n    }\r\n\r\n    handleSelect(idTab) {\r\n        console.log(\"IdTab\", idTab)\r\n        this.setState({\r\n            pasoActual: idTab\r\n        })\r\n    }\r\n\r\n    registrar() {\r\n        const { addNotificacion } = this.props;\r\n        let mensajeNotif;\r\n        let registro;\r\n        let creaciones = [];\r\n        if (this.state.oidAlumno === '') {\r\n            mensajeNotif = \"Debe Buscar un Alumno Existente.\";\r\n            addNotificacion(Tipo.Error, mensajeNotif);\r\n            console.error(\"Error:\", mensajeNotif);\r\n            this.setState({ validar: true })\r\n            return Promise.resolve(false);\r\n        }\r\n\r\n        if (this.formulariosValidos()) {\r\n            console.log(\"Formularios Válidos\")\r\n            const formularios = this.formulariosRef;\r\n            creaciones = formularios.map(form => {\r\n                return form.registrarPersona(this.state.oidAlumno);\r\n            })\r\n        } else {\r\n            if (this.formulariosRef.length > 0) {\r\n                mensajeNotif = \"Hay un Formulario Inválido. Revise Nuevamente!\";\r\n            } else {\r\n                mensajeNotif = \"Debe registrar al menos un familiar\";\r\n            }\r\n            //FIXME: problemas cuando el alumno si tiene familiares\r\n            addNotificacion(Tipo.Error, mensajeNotif);\r\n            console.error(\"Error:\", mensajeNotif);\r\n            this.setState({ validar: true })\r\n            registro = Promise.resolve(false);\r\n        }\r\n        if (creaciones.length > 0) {\r\n            registro = Promise.all(creaciones).then(registraron => {\r\n                console.log(\"Registros Realizados\", registraron)\r\n                const huboRegistro = registraron.every(idRegistro => {\r\n                    console.log(\"idRegistro\", idRegistro)\r\n                    return idRegistro !== false\r\n                })\r\n                if (huboRegistro) {\r\n                    mensajeNotif = \"Registro Familiares Exitoso.\";\r\n                    addNotificacion(Tipo.Exito, mensajeNotif);\r\n                    console.log(\"Notificación:\", mensajeNotif);\r\n                    this.setState({ validar: true })\r\n                    return true;\r\n                } else {\r\n                    //FIXME: poner una var que diga si registro o no en cada componente, de ahi se revisan todos y se vuele a intentar en los que no anduvo                    \r\n                    return false;\r\n                }\r\n            })\r\n        }\r\n        return registro;\r\n    }\r\n\r\n    searchAlumno = async () => {\r\n        const { addNotificacion } = this.props;\r\n        let mensajeNotif;\r\n        const dniAlumno = this.state.datosAlumno.dni.valor;\r\n        console.log(\"Search Alumno dni:\", dniAlumno);\r\n        if (dniAlumno === '') {\r\n            mensajeNotif = \"Dni Alumno Vacío.\";\r\n            addNotificacion(Tipo.Alerta, mensajeNotif);\r\n            console.log(\"Notificación:\", mensajeNotif);\r\n            return;\r\n        }\r\n\r\n        fetch(urlBase + '/alumno/dni/' + dniAlumno)\r\n            .then(response => {\r\n                return response.json().then(data => {\r\n                    //console.log(\"Completar Familia - Status Search Alumno\", response.status)\r\n                    if (response.status === 404) {\r\n                        throw new NoExistePersona(data.message)\r\n                    } else if (response.status === 400) {\r\n                        throw new BadRequest(data.message);\r\n                    } else if (response.status === 500) {\r\n                        throw new Error(data.message)\r\n                    }\r\n                    return data;\r\n                })\r\n            })\r\n            .then(data => {\r\n                //console.log(\"Alumno Encontrado \", data);\r\n                const datos = data.alumno;\r\n                //TODO: extraer familiares y agregar sus componentes correspondientes                \r\n                //TODO: notif, si no tiene familiares\r\n                this.setState(state => {\r\n                    let nuevoEstado = {};\r\n                    Object.assign(nuevoEstado, this.reiniciarTransaccion());\r\n                    Object.assign(nuevoEstado, { datosAlumno: this.extraeDatosAlumno(state, datos) });\r\n                    Object.assign(nuevoEstado, { oidAlumno: data.alumno._id })\r\n                    return nuevoEstado\r\n                })\r\n                mensajeNotif = \"Alumno encontrado con el DNI ingresado.\";\r\n                addNotificacion(Tipo.Exito, mensajeNotif);\r\n                console.log(\"Notificación:\", mensajeNotif, \"oid Alumno\", data.alumno._id);\r\n            })\r\n            .catch(err => {\r\n                if (err instanceof NoExistePersona) {\r\n                    mensajeNotif = err.message\r\n                } else {\r\n                    mensajeNotif = \"Error Search Alumno: \" + err.message;\r\n                }\r\n                this.setState(state => {\r\n                    let nuevoEstado = {};\r\n                    Object.assign(nuevoEstado, this.reiniciarTransaccion());\r\n                    Object.assign(nuevoEstado, {\r\n                        datosAlumno: this.reiniciarFormulario(state),\r\n                        oidAlumno: ''\r\n                    });\r\n                    return nuevoEstado\r\n                })\r\n\r\n                addNotificacion(Tipo.Error, mensajeNotif);\r\n                console.error(\"Error: \", err);\r\n            })\r\n    }\r\n\r\n    searchReinscripto = async () => {\r\n        const { addNotificacion } = this.props;\r\n        let mensajeNotif;\r\n        const oidAlumno = this.state.oidAlumno;\r\n        console.log(\"Search Alumno oid:\", oidAlumno);\r\n        if (oidAlumno === '' || oidAlumno === undefined) {\r\n            mensajeNotif = \"OID Alumno Vacío\";\r\n            addNotificacion(Tipo.Alerta, mensajeNotif);\r\n            console.log(\"Notificación:\", mensajeNotif);\r\n            return;\r\n        }\r\n\r\n        fetch(urlBase + '/alumno/oid/' + oidAlumno)\r\n            .then(response => {\r\n                return response.json().then(data => {\r\n                    console.log(\"Completar Familia - Status Search Alumno OID\", response.status)\r\n                    if (response.status === 404) {\r\n                        throw new NoExistePersona(data.message)\r\n                    } else if (response.status === 400) {\r\n                        throw new BadRequest(data.message);\r\n                    } else if (response.status === 500) {\r\n                        throw new Error(data.message)\r\n                    }\r\n                    return data;\r\n                })\r\n            })\r\n            .then(data => {\r\n                console.log(\"Alumno a Reinscribir Encontrado \", data);\r\n                const datos = data.alumno;\r\n                //TODO: extraer familiares y agregar sus componentes correspondientes, no estaba en transac              \r\n                //TODO: si no tiene familiares, notif\r\n                this.setState(state => {\r\n                    let nuevoEstado = {};\r\n                    Object.assign(nuevoEstado, this.reiniciarTransaccion());\r\n                    Object.assign(nuevoEstado, { datosAlumno: this.extraeDatosAlumno(state, datos) });\r\n                    Object.assign(nuevoEstado, { oidAlumno: data.alumno._id })\r\n                    return nuevoEstado\r\n                })\r\n            })\r\n            .catch(err => {\r\n                if (err instanceof NoExistePersona) {\r\n                    mensajeNotif = err.message\r\n                } else {\r\n                    mensajeNotif = \"Error Search Alumno: \" + err.message;\r\n                }\r\n                this.setState(state => {\r\n                    let nuevoEstado = {};\r\n                    Object.assign(nuevoEstado, this.reiniciarTransaccion());\r\n                    Object.assign(nuevoEstado, { datosAlumno: this.reiniciarFormulario(state) });\r\n                    return nuevoEstado\r\n                })\r\n\r\n                addNotificacion(Tipo.Error, mensajeNotif);\r\n                console.error(\"Error: \", err);\r\n                //Vuelve a la transaccion anterior\r\n                this.props.inscripcion();\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { alertaRegistro, modalFormNuevo, datosAlumno, spinnerAlumno, formularios, tabs, validar } = this.state;\r\n        const { inscripcion, esReinscripcion } = this.props;\r\n\r\n        let componentes, navLinks;\r\n        if (formularios.length === 0) {\r\n            componentes = <div className=\"mb-2\">Agregue un nuevo Familiar</div>;\r\n            navLinks = <div className=\"mx-2\">No existen Familiares</div>;\r\n        } else {\r\n            componentes = formularios;\r\n            navLinks = tabs;\r\n        }\r\n        //console.log(componentes)        \r\n\r\n        return (\r\n            <div className=\"col\" role=\"main\">\r\n                {/*< !--Sub - Header Página-- >*/}\r\n                < div className=\"row m-3 no-gutters justify-content-sm-between align-items-center\" >\r\n                    <div className=\"pl-3 rounded-lg contTitulo\">\r\n                        <h2 className=\"m-0 titulo\">Completar Familia</h2>\r\n                    </div>\r\n\r\n                    {/* <!--BOTONES IFAZ-- > */}\r\n                    <div className=\"d-flex justify-content-between ml-2 mt-2\">\r\n                        <button type=\"button\" className={`btn btn-secondary boton botonSecundario mr-1 ${!esReinscripcion ? '' : 'd-none'}`}\r\n                            onClick={() => { window.location.href = '/'; }}>\r\n                            Cancelar\r\n                        </button>\r\n                        <button type=\"button\" className={`btn btn-primary boton botonSecundario  mr-1 ${esReinscripcion ? '' : 'd-none'}`} onClick={inscripcion}>\r\n                            <Icon.ArrowLeft width={\"1.3rem\"} height={\"1.3rem\"} />\r\n                        </button>\r\n                        <AlertaCompletarFamilia\r\n                            datos={alertaRegistro}\r\n                            reinscripcion={esReinscripcion}\r\n                            funciones={{\r\n                                registrar: this.registrar,\r\n                                inscribir: inscripcion\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div >\r\n                {/* < !--Formulario--> */}\r\n                <div className=\"row m-3 p-3 rounded-lg no-gutters contFormulario\">\r\n                    <div className=\"col\">\r\n                        <form className={validar ? \"was-validated\" : \"\"} noValidate>\r\n                            {/* <!--shadow-sm--> */}\r\n                            <div className=\"row no-gutters px-3 mb-3 card shadow\">\r\n                                <div className=\"col card-body pt-2 pb-0\" role=\"group\" aria-labelledby=\"datos_alumno\">\r\n                                    <h3 className=\"card-title my-2 titSeccion\" id=\"datos_alumno\">Datos Alumno</h3>\r\n                                    <div className=\"row no-gutters\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"col-xl-8\">\r\n                                                    <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                                        <label className=\"col-auto px-3 py-1 my-1 mr-3 requerido\" id=\"etiq_dni\" htmlFor=\"dni\">DNI</label>\r\n                                                        {/*className= \"... ml-3 ...\" */}\r\n                                                        <div className=\"col-auto ml-md-3 mr-3 order-md-12\">\r\n                                                            <button type=\"button\" className=\"btn btn-primary boton\"\r\n                                                                id=\"dni\" aria-labelledby=\"etiq_dni\" onClick={this.searchAlumno}>\r\n                                                                <div className={!spinnerAlumno ? '' : 'd-none'}>\r\n                                                                    Buscar\r\n                                                                    <Icon.Search width={\"1.2rem\"} height={\"1.2rem\"} className=\"ml-1\" />\r\n                                                                </div>\r\n                                                                <div className={`spinner-border spinner-border-sm text-light my-1 ${spinnerAlumno ? '' : 'd-none'}`} role=\"status\">\r\n                                                                    <span className=\"sr-only\">Loading...</span>\r\n                                                                </div>\r\n                                                                {/*<div className=\"d-sm-block d-none\">Buscar</div>\r\n                                                                <Icon.Search width={\"1.2rem\"} height={\"1.2rem\"} className=\"ml-md-1\" />*/}\r\n                                                            </button>\r\n\r\n                                                            {/*<Notificacion />*/}\r\n                                                        </div>\r\n                                                        <div className=\"col-xs col-md\">\r\n                                                            <div className=\"input-group\">\r\n                                                                <input className=\"form-control\" type=\"text\" id=\"dni\" name=\"dni\"\r\n                                                                    placeholder=\"Ingrese un Dni\" alt=\"IngresoDni\" required\r\n                                                                    value={datosAlumno.dni.valor} onChange={this.handleChangeAlumno}\r\n                                                                    aria-labelledby=\"etiq_dni\" aria-required=\"true\" disabled={!datosAlumno.dni.habilitado}\r\n                                                                />\r\n                                                                <div className=\"invalid-feedback\">\r\n                                                                    {datosAlumno.dni.msjError}\r\n                                                                </div>\r\n                                                                <div className=\"input-group-append\">\r\n                                                                    <label className=\"d-none\" id=\"etiq_tipo_dni\" htmlFor=\"tipoDni\">Tipo DNI</label>\r\n                                                                    <select id=\"tipoDni\" name=\"tipoDni\" className=\"form-control\" required\r\n                                                                        value={datosAlumno.tipoDni.valor} onChange={this.handleChangeAlumno}\r\n                                                                        aria-labelledby=\"etiq_tipo_dni\" aria-required=\"true\" aria-expanded=\"false\"\r\n                                                                        disabled={!datosAlumno.dni.habilitado}>\r\n                                                                        <option value=\"DNI\">DNI</option>\r\n                                                                        <option value=\"LC\">LC</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg\">\r\n                                                    <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                                        <div className=\"col-auto  mr-3 input-group\">\r\n                                                            <div className=\"input-group-prepend\">\r\n                                                                <span id=\"etiq_legajo\" className=\"input-group-text\">Legajo</span>\r\n                                                            </div>\r\n                                                            <input type=\"number\" className=\"form-control\" id=\"legajo\" name=\"legajo\"\r\n                                                                value={datosAlumno.legajo.valor}\r\n                                                                aria-labelledby=\"etiq_legajo\" disabled />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div >\r\n                                            </div>\r\n\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"col-lg\">\r\n                                                    <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                                        <label className=\"col-auto px-3 py-1 my-1 mr-3\" id=\"etiq_nombre\" htmlFor=\"nombre\">Nombre</label>\r\n                                                        <div className=\"col-sm\">\r\n                                                            <input type=\"text\" className=\"form-control\" id=\"nombre\" name=\"nombre\"\r\n                                                                value={datosAlumno.nombre.valor} onChange={this.handleChangeAlumno}\r\n                                                                aria-labelledby=\"etiq_nombre\" disabled />\r\n                                                            <div className=\"invalid-feedback\">\r\n                                                                {datosAlumno.nombre.msjError}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg\">\r\n                                                    <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                                        <label className=\"col-auto px-3 py-1 my-1 mr-3\" id=\"etiq_apellido\" htmlFor=\"apellido\">Apellido</label>\r\n                                                        <div className=\"col-sm\">\r\n                                                            <input type=\"text\" className=\"form-control\" id=\"apellido\" name=\"apellido\"\r\n                                                                value={datosAlumno.apellido.valor} onChange={this.handleChangeAlumno}\r\n                                                                aria-labelledby=\"etiq_apellido\" disabled />\r\n                                                            <div className=\"invalid-feedback\">\r\n                                                                {datosAlumno.apellido.msjError}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-3 ml-3 d-flex align-items-center\">\r\n                                            {/*TODO: alinear foto al centro*/}\r\n                                            <div className=\"form-group row no-gutters mb-2 align-items-middle justify-content-center\">\r\n                                                <img src={datosAlumno.foto.valor} className=\"img-thumbnail m-2\"\r\n                                                    alt=\"Foto Alumno\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/*TODO: ver aria-labelledby, ver titulo de la seccion*/}\r\n                                    <Row className=\"no-gutters mt-3\">\r\n                                        <Col>\r\n                                            <TabContainer id=\"left-tabs-example\" defaultActiveKey=\"0\" onSelect={this.handleSelect}>\r\n                                                <Row className=\"no-gutters\">\r\n                                                    <Col>\r\n                                                        <Nav variant=\"tabs\">\r\n                                                            {navLinks}\r\n                                                            <ModalFormNuevo\r\n                                                                datos={modalFormNuevo}\r\n                                                                funciones={{ nuevo: this.addFormulario }} />\r\n                                                        </Nav>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <div className=\"row no-gutters mb-3 card shadow-sm border-top-0\">\r\n                                                    <div className=\"col card-body pt-2 pb-0\" role=\"group\" aria-labelledby=\"datos_familiar\">\r\n                                                        <Row className=\"row no-gutters px-3\">\r\n                                                            <Col>\r\n                                                                <Tab.Content>\r\n                                                                    {componentes}\r\n                                                                </Tab.Content>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </div></div>\r\n                                            </TabContainer>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    extraeDatosAlumno(state, datos) {\r\n        const clavesRecibidas = Object.keys(datos);\r\n        const clavesFormulario = Object.keys(state.datosAlumno);\r\n        let aux = {}, datosRecibidos = { ...state.datosAlumno };\r\n\r\n        const clavesUtiles = clavesFormulario.filter(x => clavesRecibidas.includes(x));\r\n\r\n        //Reinicio los datos del formulario        \r\n        Object.assign(datosRecibidos, this.reiniciarFormulario(state));\r\n\r\n        //Extraigo datos\r\n        clavesUtiles.forEach(clave => {\r\n            //TODO: extraer de esquema o generar nombre foto \r\n            if (datos[clave] !== null) {\r\n                aux = {\r\n                    [clave]: {\r\n                        ...state.datosAlumno[clave],\r\n                        valor: datos[clave],\r\n                    }\r\n                };\r\n                Object.assign(datosRecibidos, aux);\r\n            }\r\n        })\r\n        return datosRecibidos;\r\n    }\r\n\r\n    reiniciarFormulario(state) {\r\n        const clavesFormulario = Object.keys(state.datosAlumno);\r\n        let valorAux, aux;\r\n        let vacio = { ...state.datosAlumno };\r\n        //ReinicioFormulario\r\n        clavesFormulario.shift(); //Remuevo a dni para que no lo reinicie\r\n        clavesFormulario.forEach(clave => {\r\n            valorAux = clave === 'foto' ? null : clave === \"tipoDni\" ? 'DNI' : '';\r\n            aux = {\r\n                [clave]: {\r\n                    ...state.datosAlumno[clave],\r\n                    valor: valorAux,\r\n                }\r\n            }\r\n            Object.assign(vacio, aux);\r\n        })\r\n        return vacio;\r\n    }\r\n\r\n    reiniciarTransaccion() {\r\n        return {\r\n            cantPasos: 0,\r\n            pasoActual: 0,\r\n            formularios: [],\r\n            tabs: [],\r\n            validar: false\r\n        }\r\n    }\r\n\r\n    formulariosValidos() {\r\n        const formularios = this.formulariosRef;\r\n        let validos = false;\r\n        let id = 0;\r\n        if (formularios.length > 0) {\r\n            validos = formularios.every(form => {\r\n                console.log(\"Form id:\", id, \"esValido?\", form.esValido())\r\n                id += 1;\r\n                return form.esValido();\r\n            })\r\n        }\r\n        //console.log(\"Todos los Formularios son válidos?\", validos)\r\n        return validos;\r\n    }\r\n}\r\n\r\nexport default CompletarFamilia;","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\NotasTrimestrales.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AltaCurso.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Alerts.js",[],["132","133"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormDialogAltaCurso.js",["134"],"import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport addRow from './TableDictados'\r\n\r\nexport default function FormDialog({ addRow }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [profesor, setProfesor] = React.useState('');\r\n    const [materia, setMateria] = React.useState('');\r\n    const [horario, setHorario] = React.useState('');\r\n    const [programa, setPrograma] = React.useState('');\r\n    const [filename, setFileName] = React.useState(\"Subir Programa\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        for (const property in dia) {\r\n            if (dia[property]) {\r\n\r\n                addRow(profesor, materia, property, horario, programa)\r\n                break;\r\n            }\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    // START checkbox\r\n    const [dia, setDia] = React.useState({\r\n        lunes: false,\r\n        mates: false,\r\n        miercoles: false,\r\n        jueves: false,\r\n        viernes: false,\r\n    });\r\n\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setDia({ ...dia, [event.target.name]: event.target.checked });\r\n    };\r\n    // END checkbox\r\n\r\n    const shortRoute = (nameFile) => {\r\n        let nameShort = nameFile.substring(12)\r\n        setFileName(nameShort)\r\n        setPrograma(nameShort)        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <button type=\"button\" className=\"btn btn-primary mr-1 boton\" onClick={handleClickOpen}>Registrar Dictado</button>\r\n            </div>\r\n            <Dialog fullWidth={true} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Registro Dictado Nuevo</DialogTitle>\r\n                <DialogContent>\r\n                    <form className=\"was-validated\">\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-1 mr-3 requerido\" id=\"etiq_anio\" htmlFor=\"dni\">Materia</label>\r\n                                    <div className=\"col col-md-4\">\r\n                                        <input className=\"form-control\" type=\"text\" id=\"anio\" name=\"anio\"\r\n                                            placeholder=\"Nombre Materia\" alt=\"Año del curso\" required\r\n                                            onChange={e => setMateria(e.target.value)}\r\n                                            aria-labelledby=\"etiq_anio\" aria-required=\"true\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\" style={{ \"marginTop\": \"10px\" }}>\r\n                            <div className=\"col\">\r\n                                <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-1 mr-3 requerido\" id=\"etiq_anio\" htmlFor=\"dni\">Seleccione el día</label>\r\n                                </div>\r\n                                <div style={{ \"marginLeft\": \"10px\" }}>\r\n                                    <FormGroup row>\r\n                                        <FormControlLabel\r\n                                            label=\"Lunes\"\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.lunes}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"lunes\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.martes}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"martes\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Martes\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.miercoles}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"miercoles\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Miercoles\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.jueves}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"jueves\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Jueves\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.viernes}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"viernes\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Viernes\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"form-group row no-gutters align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-0 mr-3 requerido\" htmlFor=\"horario\">Seleccionar Horario</label>\r\n                                    <div className=\"col-sm\">\r\n                                        <select name=\"horario\" id=\"horario\" className=\"form-control\" required aria-required=\"true\"\r\n                                            onChange={e => setHorario(e.target.value)}\r\n                                        >\r\n                                            <option value=\"8:00\">8:00</option>\r\n                                            <option value=\"9:00\">9:00</option>\r\n                                            <option value=\"10:00\">10:00</option>\r\n                                            <option value=\"11:00\">11:00</option>\r\n                                            <option value=\"12:00\">12:00</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"form-group row no-gutters align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-0 mr-3 requerido\" htmlFor=\"profesor\">Seleccionar Profesor</label>\r\n                                    <div className=\"col-sm\">\r\n                                        <select name=\"profesor\" id=\"profesor\" className=\"form-control\" required aria-required=\"true\"\r\n                                            onChange={e => setProfesor(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Rafaela Mazu\">Rafaela Mazu</option>\r\n                                            <option value=\"Gabriela Aranda\">Gabriela Aranda</option>\r\n                                            <option value=\"Andrés Flores\">Andrés Flores</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-lg-6 d-flex align-items-center\">\r\n                                <div className=\"form-group row no-gutters mb-2 justify-content-center\">\r\n                                    <div>\r\n                                        <label className=\"custom-file-label\" id=\"etiq_programa\" htmlFor=\"programa\">{filename}</label>\r\n                                    </div>\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"programa\"\r\n                                            aria-describedby=\"etiq_programa\" onChange={e => shortRoute(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n          </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Aceptar\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n",["135","136"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\TableDictados.js",["137"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nfunction createData(profesor, materia, dia, horario, programa) {\r\n  return { profesor, materia, dia, horario, programa };\r\n}\r\n\r\nconst rows = [\r\n  createData('Quadrini Silvia', 'Matemática', 'Lunes', '8:00', 'prog_Mat2020.pdf'),\r\n  createData('Rodolfo Walsh', 'Lengua y Literatura', 'Lunes', '11:00', 'prog_Len2020.pdf'),\r\n  createData('Lagos Fito', 'Biología', 'Martes', '8:00', 'prog_Mat2020.pdf'),\r\n  createData('Torres Amanda', 'Geografía', 'Miércoles', '10:00', 'prog_Geo2020.pdf'),\r\n  createData('Storani Sergio', 'Física', 'Jueves', '11:00', 'prog_Fis2020.pdf'),\r\n];\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'profesor', label: 'Profesor', minWidth: 170 },\r\n  { id: 'materia', label: 'Materia', minWidth: 100 },\r\n  {\r\n    id: 'dia',\r\n    label: 'Dia',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'horario',\r\n    label: 'Horario',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'programa',\r\n    label: 'Programa',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n\r\nexport default function StickyHeadTable({ dictado }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  if( dictado && dictado.profesor != '' ) {\r\n    rows.push(createData(dictado.profesor, dictado.materia, dictado.dia, dictado.horario, dictado.programa))\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}",["138","139"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\utils\\Errores.js",[],["140","141"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioPadre.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioHermano.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\ModalFormNuevo.js",[],["142","143"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaCompletarFamilia.js",[],["144","145"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaInscribirAlumno.js",["146"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Notificacion.js",["147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":5,"column":5,"nodeType":"154","messageId":"155","endLine":7,"endColumn":6},{"ruleId":"148","replacedBy":"156"},{"ruleId":"150","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":13,"column":9,"nodeType":"160","messageId":"161","endLine":13,"endColumn":44},{"ruleId":"162","severity":1,"message":"163","line":14,"column":8,"nodeType":"164","messageId":"165","endLine":14,"endColumn":14},{"ruleId":"148","replacedBy":"166"},{"ruleId":"150","replacedBy":"167"},{"ruleId":"148","replacedBy":"168"},{"ruleId":"150","replacedBy":"169"},{"ruleId":"148","replacedBy":"170"},{"ruleId":"150","replacedBy":"171"},{"ruleId":"148","replacedBy":"172"},{"ruleId":"150","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":86,"column":33,"nodeType":"176","endLine":88,"endColumn":84},{"ruleId":"148","replacedBy":"177"},{"ruleId":"150","replacedBy":"178"},{"ruleId":"162","severity":1,"message":"179","line":15,"column":8,"nodeType":"164","messageId":"165","endLine":15,"endColumn":14},{"ruleId":"148","replacedBy":"180"},{"ruleId":"150","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":76,"column":35,"nodeType":"184","messageId":"185","endLine":76,"endColumn":37},{"ruleId":"148","replacedBy":"186"},{"ruleId":"150","replacedBy":"187"},{"ruleId":"148","replacedBy":"188"},{"ruleId":"150","replacedBy":"189"},{"ruleId":"148","replacedBy":"190"},{"ruleId":"150","replacedBy":"191"},{"ruleId":"148","replacedBy":"192"},{"ruleId":"150","replacedBy":"193"},{"ruleId":"162","severity":1,"message":"194","line":8,"column":19,"nodeType":"164","messageId":"165","endLine":8,"endColumn":27},{"ruleId":"162","severity":1,"message":"195","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["196"],["197"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar",["196"],["197"],["196"],["197"],["196"],["197"],["196"],["197"],"react/jsx-pascal-case","Imported JSX component default must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement",["196"],["197"],"'addRow' is defined but never used.",["196"],["197"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["196"],["197"],["196"],["197"],["196"],["197"],["196"],["197"],"'setDatos' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]