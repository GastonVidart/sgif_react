[{"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\index.js":"1","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Footer.js":"2","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Menu.js":"3","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\App.js":"4","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Header.js":"5","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\reportWebVitals.js":"6","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Sacramento.js":"7","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioAlumno.js":"8","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioResponsable.js":"9","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Home.js":"10","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\InscribirAlumno.js":"11","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\CompletarFamilia.js":"12","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\NotasTrimestrales.js":"13","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AltaCurso.js":"14","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Alerts.js":"15","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormDialogAltaCurso.js":"16","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\TableDictados.js":"17","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\utils\\Errores.js":"18","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioPadre.js":"19","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioHermano.js":"20","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\ModalFormNuevo.js":"21","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaCompletarFamilia.js":"22","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaInscribirAlumno.js":"23","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Notificacion.js":"24"},{"size":613,"mtime":1612227044649,"results":"25","hashOfConfig":"26"},{"size":260,"mtime":1611178187818,"results":"27","hashOfConfig":"26"},{"size":4140,"mtime":1612213887137,"results":"28","hashOfConfig":"26"},{"size":4871,"mtime":1612322598022,"results":"29","hashOfConfig":"26"},{"size":2239,"mtime":1611178187868,"results":"30","hashOfConfig":"26"},{"size":375,"mtime":1606479163151,"results":"31","hashOfConfig":"26"},{"size":2544,"mtime":1612213932031,"results":"32","hashOfConfig":"26"},{"size":25734,"mtime":1612324523132,"results":"33","hashOfConfig":"26"},{"size":28190,"mtime":1612324503758,"results":"34","hashOfConfig":"26"},{"size":713,"mtime":1611178187868,"results":"35","hashOfConfig":"26"},{"size":47976,"mtime":1612378066558,"results":"36","hashOfConfig":"26"},{"size":31017,"mtime":1612376426840,"results":"37","hashOfConfig":"26"},{"size":635,"mtime":1611178187878,"results":"38","hashOfConfig":"26"},{"size":7947,"mtime":1611178187818,"results":"39","hashOfConfig":"26"},{"size":1466,"mtime":1611948692632,"results":"40","hashOfConfig":"26"},{"size":11116,"mtime":1611178187838,"results":"41","hashOfConfig":"26"},{"size":3950,"mtime":1611178187902,"results":"42","hashOfConfig":"26"},{"size":1863,"mtime":1612213887163,"results":"43","hashOfConfig":"26"},{"size":47282,"mtime":1612377892647,"results":"44","hashOfConfig":"26"},{"size":30342,"mtime":1612377649144,"results":"45","hashOfConfig":"26"},{"size":3114,"mtime":1612213887160,"results":"46","hashOfConfig":"26"},{"size":2472,"mtime":1612378107447,"results":"47","hashOfConfig":"26"},{"size":2639,"mtime":1612324241814,"results":"48","hashOfConfig":"26"},{"size":1675,"mtime":1612320993066,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"va329a",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"91"},"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\index.js",[],["111","112"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Footer.js",["113"],"import React, { Component } from \"react\";\r\n\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n           <footer>Pie de Pagina</footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Menu.js",["114"],"import React from \"react\";\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport '../css/navbar.css';\r\n\r\nclass Menu extends React.Component {\r\n    getNavLinkClass = (path) => {\r\n        return this.props.location.pathname === path ? 'active' : '';\r\n    }\r\n\r\n    render() {\r\n        {/*TODO: ver largo final pagina */}\r\n        return (\r\n            < nav className=\"col-md-auto shadow\" role=\"navigation\" >\r\n                <ul>\r\n\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"col-auto texto_nav\" href=\"/\">Inicio</a>\r\n                    </li>\r\n\r\n                    {/* que a englobe todo, ver estilos */}\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/inscribir-alumno\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"col-auto texto_nav\" href=\"/inscribir-alumno\">Inscribir Alumno</a>\r\n                    </li>\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/completar-familia\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"col-auto texto_nav\" href=\"/completar-familia\">Completar Familia</a>\r\n                    </li>\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/alta-curso\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"texto_nav\" href=\"/alta-curso\">Registrar Curso</a>\r\n                    </li>\r\n                    <li className=\"row no-gutters align-items-center justify-content-start pr-4\"\r\n                        onClick={() => {\r\n                            window.location.href=\"/notas-trimestrales\";\r\n                        }}>\r\n                        <div className=\"col-auto ml-2 cont_item_nav\">\r\n                            <Icon.Circle className=\"item_nav\" />\r\n                        </div>\r\n                        <a className=\"texto_nav\" href=\"/notas-trimestrales\">Registrar Notas Trimestrales</a>\r\n                    </li>\r\n                </ul>\r\n                \r\n                <ul className=\"collapse\">\r\n                    <li className={this.getNavLinkClass(\"/\")}>\r\n                        <NavLink to=\"/\" >Inicio</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/inscribir-alumno\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/completar-familia\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/notas-trimestrales\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                    <li className={this.getNavLinkClass(\"/alta-curso\")}>\r\n                        <NavLink to=\"/\" >Inscribir Alumno</NavLink></li>\r\n                </ul>\r\n\r\n            </nav >\r\n        )\r\n    }\r\n}\r\n\r\nMenu = withRouter(Menu);\r\nexport default Menu;\r\n",["115","116"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\App.js",["117"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Header.js",[],["118","119"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\reportWebVitals.js",[],["120","121"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Sacramento.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioAlumno.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormularioResponsable.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Home.js",[],["122","123"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\InscribirAlumno.js",["124","125","126"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\CompletarFamilia.js",["127"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\NotasTrimestrales.js",[],["128","129"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AltaCurso.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Alerts.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\FormDialogAltaCurso.js",["130"],"import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport addRow from './TableDictados'\r\n\r\nexport default function FormDialog({ addRow }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [profesor, setProfesor] = React.useState('');\r\n    const [materia, setMateria] = React.useState('');\r\n    const [horario, setHorario] = React.useState('');\r\n    const [programa, setPrograma] = React.useState('');\r\n    const [filename, setFileName] = React.useState(\"Subir Programa\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        for (const property in dia) {\r\n            if (dia[property]) {\r\n\r\n                addRow(profesor, materia, property, horario, programa)\r\n                break;\r\n            }\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    // START checkbox\r\n    const [dia, setDia] = React.useState({\r\n        lunes: false,\r\n        mates: false,\r\n        miercoles: false,\r\n        jueves: false,\r\n        viernes: false,\r\n    });\r\n\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setDia({ ...dia, [event.target.name]: event.target.checked });\r\n    };\r\n    // END checkbox\r\n\r\n    const shortRoute = (nameFile) => {\r\n        let nameShort = nameFile.substring(12)\r\n        setFileName(nameShort)\r\n        setPrograma(nameShort)        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <button type=\"button\" className=\"btn btn-primary mr-1 boton\" onClick={handleClickOpen}>Registrar Dictado</button>\r\n            </div>\r\n            <Dialog fullWidth={true} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Registro Dictado Nuevo</DialogTitle>\r\n                <DialogContent>\r\n                    <form className=\"was-validated\">\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-1 mr-3 requerido\" id=\"etiq_anio\" htmlFor=\"dni\">Materia</label>\r\n                                    <div className=\"col col-md-4\">\r\n                                        <input className=\"form-control\" type=\"text\" id=\"anio\" name=\"anio\"\r\n                                            placeholder=\"Nombre Materia\" alt=\"Año del curso\" required\r\n                                            onChange={e => setMateria(e.target.value)}\r\n                                            aria-labelledby=\"etiq_anio\" aria-required=\"true\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\" style={{ \"marginTop\": \"10px\" }}>\r\n                            <div className=\"col\">\r\n                                <div className=\"form-group row no-gutters mb-2 align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-1 mr-3 requerido\" id=\"etiq_anio\" htmlFor=\"dni\">Seleccione el día</label>\r\n                                </div>\r\n                                <div style={{ \"marginLeft\": \"10px\" }}>\r\n                                    <FormGroup row>\r\n                                        <FormControlLabel\r\n                                            label=\"Lunes\"\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.lunes}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"lunes\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.martes}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"martes\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Martes\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.miercoles}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"miercoles\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Miercoles\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.jueves}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"jueves\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Jueves\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={dia.viernes}\r\n                                                    onChange={handleChange}\r\n                                                    name=\"viernes\"\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            }\r\n                                            label=\"Viernes\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"form-group row no-gutters align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-0 mr-3 requerido\" htmlFor=\"horario\">Seleccionar Horario</label>\r\n                                    <div className=\"col-sm\">\r\n                                        <select name=\"horario\" id=\"horario\" className=\"form-control\" required aria-required=\"true\"\r\n                                            onChange={e => setHorario(e.target.value)}\r\n                                        >\r\n                                            <option value=\"8:00\">8:00</option>\r\n                                            <option value=\"9:00\">9:00</option>\r\n                                            <option value=\"10:00\">10:00</option>\r\n                                            <option value=\"11:00\">11:00</option>\r\n                                            <option value=\"12:00\">12:00</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-sm\">\r\n                                <div className=\"form-group row no-gutters align-items-center\">\r\n                                    <label className=\"col-auto px-3 py-1 my-0 mr-3 requerido\" htmlFor=\"profesor\">Seleccionar Profesor</label>\r\n                                    <div className=\"col-sm\">\r\n                                        <select name=\"profesor\" id=\"profesor\" className=\"form-control\" required aria-required=\"true\"\r\n                                            onChange={e => setProfesor(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Rafaela Mazu\">Rafaela Mazu</option>\r\n                                            <option value=\"Gabriela Aranda\">Gabriela Aranda</option>\r\n                                            <option value=\"Andrés Flores\">Andrés Flores</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-lg-6 d-flex align-items-center\">\r\n                                <div className=\"form-group row no-gutters mb-2 justify-content-center\">\r\n                                    <div>\r\n                                        <label className=\"custom-file-label\" id=\"etiq_programa\" htmlFor=\"programa\">{filename}</label>\r\n                                    </div>\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"custom-file-input\" id=\"programa\"\r\n                                            aria-describedby=\"etiq_programa\" onChange={e => shortRoute(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n          </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Aceptar\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n",["131","132"],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\TableDictados.js",["133"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nfunction createData(profesor, materia, dia, horario, programa) {\r\n  return { profesor, materia, dia, horario, programa };\r\n}\r\n\r\nconst rows = [\r\n  createData('Quadrini Silvia', 'Matemática', 'Lunes', '8:00', 'prog_Mat2020.pdf'),\r\n  createData('Rodolfo Walsh', 'Lengua y Literatura', 'Lunes', '11:00', 'prog_Len2020.pdf'),\r\n  createData('Lagos Fito', 'Biología', 'Martes', '8:00', 'prog_Mat2020.pdf'),\r\n  createData('Torres Amanda', 'Geografía', 'Miércoles', '10:00', 'prog_Geo2020.pdf'),\r\n  createData('Storani Sergio', 'Física', 'Jueves', '11:00', 'prog_Fis2020.pdf'),\r\n];\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'profesor', label: 'Profesor', minWidth: 170 },\r\n  { id: 'materia', label: 'Materia', minWidth: 100 },\r\n  {\r\n    id: 'dia',\r\n    label: 'Dia',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'horario',\r\n    label: 'Horario',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'programa',\r\n    label: 'Programa',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n\r\nexport default function StickyHeadTable({ dictado }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  if( dictado && dictado.profesor != '' ) {\r\n    rows.push(createData(dictado.profesor, dictado.materia, dictado.dia, dictado.horario, dictado.programa))\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\utils\\Errores.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioPadre.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Formularios\\FormularioHermano.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\ModalFormNuevo.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaCompletarFamilia.js",[],"C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\AlertaInscribirAlumno.js",["134"],"import { Modal } from 'react-bootstrap';\r\nimport { useState } from \"react\";\r\nimport { Tipo } from \"./Notificacion\";\r\n\r\nexport default function AlertaInscribirAlumno({ registrar, addNotificacion }) {\r\n    const [show, setShow] = useState(false);\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [datos, setDatos] = useState({\r\n        title: 'Está seguro de que desea finalizar?',\r\n        texto: 'Si finaliza, se guardarán los cambios realizados.'\r\n    })\r\n\r\n    const handleClose = () => {\r\n        setSpinner(false);\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => {\r\n        setSpinner(false);\r\n        setShow(true)\r\n    };\r\n\r\n    const handleAceptar = () => {\r\n        let mensajeNotif;\r\n        setSpinner(true);\r\n        registrar().then(exito => {\r\n            if (exito) {                     \r\n                window.location.href = '/';\r\n                //FIXME: notif exito - problema con location-href\r\n            } else {\r\n                handleClose();\r\n            }\r\n        }).catch(err => {\r\n            mensajeNotif = err.message;\r\n            addNotificacion(Tipo.Error, mensajeNotif);\r\n            console.error(\"Error:\", mensajeNotif);\r\n            handleClose();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" className=\"btn btn-primary mr-1 boton\" onClick={handleShow} >\r\n                Finalizar Registro\r\n            </button>\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{datos.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{datos.texto}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-secondary boton botonSecundario\" onClick={handleClose}>Cancelar</button>\r\n                    <button type=\"button\" className=\"btn btn-primary boton d-flex justify-content-center\" style={{ width: \"5rem\" }} onClick={handleAceptar}\r\n                        disabled={spinner}>\r\n                        <span className={!spinner ? '' : 'd-none'}>Aceptar</span>\r\n                        <div className={`spinner-border spinner-border-sm text-light my-1 ${spinner ? '' : 'd-none'}`} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}","C:\\Users\\gasty\\Documents\\GitHub\\sgif_react\\frontend\\src\\components\\Notificacion.js",["135"],"import React, { useState } from 'react';\r\nimport { Toast, ToastHeader } from 'react-bootstrap'\r\n\r\nexport const Tipo = { Alerta: 'Alerta', Error: 'Error', Exito: 'Exito' };\r\n\r\nexport default function Notificacion({ id, tipo, mensaje, delNotificacion }) {\r\n    const [show, setShow] = React.useState(true);\r\n    const toggleShow = () => setShow(!show);\r\n    const miliSeg = 5;\r\n\r\n    const handleClose = () => {\r\n        toggleShow();        \r\n        delNotificacion(id)\r\n    }\r\n\r\n    const handleTipo = () => {\r\n        let estilo;        \r\n        switch (tipo) {\r\n            case Tipo.Alerta:\r\n                estilo = 'notificacion-alerta';\r\n                break;\r\n            case Tipo.Error:\r\n                estilo = 'notificacion-error';\r\n                break;\r\n            case Tipo.Exito:\r\n                estilo = 'notificacion-exito';\r\n                break;\r\n            default:\r\n                estilo = '';\r\n                break;\r\n        }\r\n        return estilo;\r\n    }\r\n\r\n    return (\r\n        <div aria-live=\"assertive\" aria-atomic=\"true\" role=\"alert\">\r\n            {/*autohide delay={3000} animation={true default}*/}\r\n            {/*TODO: animacion de entrada */}\r\n            <Toast className=\"notificacion\" show={show} onClose={handleClose} animation={true} autohide delay={1000 * miliSeg}>\r\n                <ToastHeader className={handleTipo()} >\r\n                    <strong class=\"mr-auto\">{tipo}</strong>\r\n                    {/*<small>11 mins ago</small>*/}\r\n                </ToastHeader>\r\n                <Toast.Body>\r\n                    <span>{mensaje}</span>\r\n                </Toast.Body>\r\n            </Toast>\r\n        </div>\r\n    );\r\n}",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":5,"column":5,"nodeType":"142","messageId":"143","endLine":7,"endColumn":6},{"ruleId":"144","severity":1,"message":"145","line":13,"column":9,"nodeType":"146","messageId":"147","endLine":13,"endColumn":44},{"ruleId":"136","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":14,"column":8,"nodeType":"152","messageId":"153","endLine":14,"endColumn":14},{"ruleId":"136","replacedBy":"154"},{"ruleId":"138","replacedBy":"155"},{"ruleId":"136","replacedBy":"156"},{"ruleId":"138","replacedBy":"157"},{"ruleId":"136","replacedBy":"158"},{"ruleId":"138","replacedBy":"159"},{"ruleId":"150","severity":1,"message":"160","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"161","line":326,"column":28,"nodeType":"152","messageId":"153","endLine":326,"endColumn":32},{"ruleId":"150","severity":1,"message":"162","line":980,"column":18,"nodeType":"152","messageId":"153","endLine":980,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":84,"column":33,"nodeType":"165","endLine":86,"endColumn":84},{"ruleId":"136","replacedBy":"166"},{"ruleId":"138","replacedBy":"167"},{"ruleId":"150","severity":1,"message":"168","line":15,"column":8,"nodeType":"152","messageId":"153","endLine":15,"endColumn":14},{"ruleId":"136","replacedBy":"169"},{"ruleId":"138","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":76,"column":35,"nodeType":"173","messageId":"174","endLine":76,"endColumn":37},{"ruleId":"150","severity":1,"message":"175","line":8,"column":19,"nodeType":"152","messageId":"153","endLine":8,"endColumn":27},{"ruleId":"150","severity":1,"message":"176","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["177"],["178"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar",["177"],["178"],["177"],["178"],["177"],["178"],"'Component' is defined but never used.","'type' is assigned a value but never used.","'valorRecibido' is defined but never used.","react/jsx-pascal-case","Imported JSX component default must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement",["177"],["178"],"'addRow' is defined but never used.",["177"],["178"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setDatos' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]